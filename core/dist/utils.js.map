{"version":3,"file":"utils.js","sources":["../src/utils/index.ts"],"sourcesContent":["import { format as formatPhoneNumber } from 'phone-fns';\nimport numeral from 'numeral';\n\nexport const NUMBER_FORMAT_PATTERN = '1,1';\nexport const VALID_ZIP_CODE_PATTERN = /^\\d{5}(?:[-\\s]\\d{4})?$/;\nexport const DATE_FORMAT_PATTERN = 'MMM d, yyyy';\nexport const PHONE_FORMAT_PATTERN = '+N (NNN) NNN-NNNN';\nexport const PHONE_MATCH_PATTERN =\n    /^$|^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im; // empty (^$|) or phone number pattern\nexport const STANDARD_CURRENCY_FORMAT_PATTERN = '$1,1';\nexport const EXTENDED_CURRENCY_FORMAT_PATTERN = '$1,1.11';\n\n/**\n * Currency formatter.\n *\n * @param {number | string} value\n * @param {string} pattern\n * @returns {string}\n */\nexport const formatCurrency = (value?: number | string, pattern?: string) => {\n    if (!value) {\n        return value;\n    }\n\n    return numeral(value).format(pattern || STANDARD_CURRENCY_FORMAT_PATTERN);\n};\n\n/**\n * Number formatter.\n *\n * @param {number | string} value\n * @param {string} pattern\n * @returns {string}\n */\nexport const formatNumber = (value: number | string, pattern?: string) => {\n    if (!value) {\n        return value;\n    }\n\n    return numeral(value).format(pattern || NUMBER_FORMAT_PATTERN);\n};\n\n/**\n * Phone number formatter.\n *\n * @param {number | string} value\n * @param {string} pattern\n * @returns\n */\nexport const formatPhone = (value: number | string, pattern?: string) => {\n    if (!value) {\n        return value;\n    }\n\n    return formatPhoneNumber(pattern || PHONE_FORMAT_PATTERN, value.toString());\n};\n\n/**\n * Returns the value in the tenth position.\n *\n * @param {number | string} value\n * @param {string} pattern\n * @returns\n */\nexport const getTenth = (value: number | string, pattern?: string) => {\n    if (!value) {\n        return value;\n    }\n\n    const str = String(value);\n\n    return str.substring(str.length - 1);\n};\n"],"names":["numeral","formatPhoneNumber"],"mappings":";;;;;;;;;;;AAGO,MAAM,qBAAwB,GAAA,MAAA;AAC9B,MAAM,sBAAyB,GAAA,yBAAA;AAC/B,MAAM,mBAAsB,GAAA,cAAA;AAC5B,MAAM,oBAAuB,GAAA,oBAAA;AAC7B,MAAM,mBACT,GAAA,iEAAA;AACG,MAAM,gCAAmC,GAAA,OAAA;AACzC,MAAM,gCAAmC,GAAA,UAAA;AASnC,MAAA,cAAA,GAAiB,CAAC,KAAA,EAAyB,OAAqB,KAAA;AACzE,EAAA,IAAI,CAAC,KAAO,EAAA;AACR,IAAO,OAAA,KAAA,CAAA;AAAA,GACX;AAEA,EAAA,OAAOA,2BAAQ,CAAA,KAAK,CAAE,CAAA,MAAA,CAAO,WAAW,gCAAgC,CAAA,CAAA;AAC5E,EAAA;AASa,MAAA,YAAA,GAAe,CAAC,KAAA,EAAwB,OAAqB,KAAA;AACtE,EAAA,IAAI,CAAC,KAAO,EAAA;AACR,IAAO,OAAA,KAAA,CAAA;AAAA,GACX;AAEA,EAAA,OAAOA,2BAAQ,CAAA,KAAK,CAAE,CAAA,MAAA,CAAO,WAAW,qBAAqB,CAAA,CAAA;AACjE,EAAA;AASa,MAAA,WAAA,GAAc,CAAC,KAAA,EAAwB,OAAqB,KAAA;AACrE,EAAA,IAAI,CAAC,KAAO,EAAA;AACR,IAAO,OAAA,KAAA,CAAA;AAAA,GACX;AAEA,EAAA,OAAOC,eAAkB,CAAA,OAAA,IAAW,oBAAsB,EAAA,KAAA,CAAM,UAAU,CAAA,CAAA;AAC9E,EAAA;AASa,MAAA,QAAA,GAAW,CAAC,KAAA,EAAwB,OAAqB,KAAA;AAClE,EAAA,IAAI,CAAC,KAAO,EAAA;AACR,IAAO,OAAA,KAAA,CAAA;AAAA,GACX;AAEA,EAAM,MAAA,GAAA,GAAM,OAAO,KAAK,CAAA,CAAA;AAExB,EAAA,OAAO,GAAI,CAAA,SAAA,CAAU,GAAI,CAAA,MAAA,GAAS,CAAC,CAAA,CAAA;AACvC;;;;;;;;;;;;;;"}